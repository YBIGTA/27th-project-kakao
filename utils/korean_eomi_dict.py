# -*- coding: utf-8 -*-
"""
한국어 종결어미/연결어미/조사 대량 사전
- 채팅/구어 변형(욤/염/용/영, 슴/슴다 등) 포함
- 길이 내림차순 정렬 후 정규식 컴파일 → 오인 매칭 감소
- 끝말부호는 별도 처리(문장부호는 SBD의 END_PUNCT에서 잡음)
"""

import regex as re
from typing import Iterable, List

# ---------- 헬퍼 ----------
def _compile_alt(patterns: Iterable[str], end_anchor: bool = True) -> re.Pattern:
    """
    패턴 리스트를 | 로 묶어 정규식 컴파일
    - 길이 내림차순 정렬(긴 패턴 우선 매칭)
    - 캡처 없는 그룹 (?: )
    """
    pats: List[str] = sorted({p for p in patterns if p}, key=len, reverse=True)
    body = "|".join(map(re.escape, pats))
    return re.compile(fr"(?:{body}){'$' if end_anchor else ''}")

# --------- 종결(문장 끝, END SIGNAL) ---------
#   - '다/요/죠/네/네요/군/구나/더라/겠…' 일반형
#   - 채팅 변형: 요→욤/염/용/영, 습니다→슴다/습니당, 했음/함/임 등
END_EOMI_LIST = [
    # 기본 평서/감탄/판단
    "이다","입니다","였다","이었다","되었다","됐다","되었네","되었네요","되었군요",
    "다","란다","랍니다","라네","라네요","라군","라군요","로구나","로군","로군요",
    "구나","군","군요","구먼","구먼요","구만","구만요","일세","로다","로다요","로구려","구려",
    "네","네요","네여","네유","네용","네영","네염",
    "요","여요","에요","예요","지요","죠","군요","네요",  # 요류
    "욤","염","용","영",  # 채팅 변형 단독(끝말 처리용)
    "지","지네","지네요","지다니","지라니","지라구","지라구요",
    "더라","더라구","더라구요","더라고","더라고요","더군","더군요",
    "겠네","겠네요","겠다","겠지","겠죠","겠구나","겠군","겠군요","겠어","겠어요","겠슴다","겠습니당",
    "했어","했네","했네요","했지","했죠","했군","했군요","했구나","했구먼",
    "했음","했음요","했음다","했슴","했슴다","함","함요","함다","임","임다","임요",
    "하네","하네요","하니라","하구나","하군요","하구먼",
    "야","이야","야요","이예요","이네요","일걸","일걸요","일껄","일껄요",
    # 의문/청유/명령류(문장 끝으로 간주: SBD엔 '종결' 신호)
    "까","까요","까여","까용","까염","니","니요","냐","나요","나여","습니까","습니까요","습니까용",
    "자","자요","하자","할까","ㄹ까","ㄹ까요","ㄹ래","ㄹ래요","ㄹ게","ㄹ게요","ㄹ께","ㄹ께요",
    "해라","하라","오라","가라","보자","해줘","해줘요","해주세요","하십시오","하시오","하셈","주셈",
    # 잖- 계열(종결로 많이 쓰임)
    "잖아","잖아요","잖니","잖냐","잖지","잖죠",
    # 방언/구어
    "노","노라","하노","하노라","하이소","합니더","합니꺼","합니더요","하이까",
    # 기타 감탄/판정 어미
    "구먼가","구먼요다","로다니","로구만","로구만요","로구먼","로구먼요",
]

END_EOMI_RE = _compile_alt(END_EOMI_LIST, end_anchor=True)

# --------- 계속(연결, CONT SIGNAL) ----------
#   - 뒤에 절이 이어질 가능성 높음 → SBD에서 '붙이는' 신호로 사용
CONT_EOMI_LIST = [
    "는데","는데도","는데다","는데다가","는데요",   # 주의: '는데요'는 종결로도 쓰이나 여기선 계속 신호로 취급 가능(과연결 바이어스)
    "고","고서","고서는","고선","고나서","고자","고도","고보니","고보면","고보니까",
    "서","어서","아서","여서","라서","이어서","하다가","다가","가다가","오다가",
    "면서","으면서","이면서","며","이라며","라며","라면서","면서도","면서는",
    "더니","더니만","더니깐","더니까","더라니","더라며","더라고","더라서",
    "자마자","자고","자면","자면야","자니","자니까","자니깐","자니깐요",
    "느라","느라고","느니","느니라","느니만","느니만큼","느니만치",
    "거나","거나말거나","든지","든가","든가요","든가든가",
    "게","게끔","게나","게도","게되면","게되니","게되니까","게되더니",
    "듯","듯이","듯해서","듯하니","듯하니까","듯하다가",
    "치만","지만","지만서도","지만도","지만요","지마는","지만은",
    "으니","으니까","으니깐","니","니까","니깐","니라서","니라고",
    "기에","길래","길래요","기에요","기에다","기에다가",
    "거니","거니와","거니와도","거든","거든지","거든가","거들랑","거라면","거라서",
    "이고","이며","이거니","이라서","이라면","이면서","이거나","이든지",
    "으로서","로서","으로써","로써","로부터","으로부터","에서부터",
    "뿐더러","뿐만아니라","뿐만 아니라","따라","따라서","따라서는",
    "한데","하는데","하려고","하려니","하려니까","하려는데",
    "때문에","탓에","덕분에","바람에","통해","통해서","위해서",
    "와서","가서","보니","보니까","보니깐","보니깐요",
    # 구어/채팅 변형
    "는데여","는데염","는데용","는데영","근데","그래서","그리고","그러고","그러니까","그러니깐",
]

CONT_EOMI_RE = _compile_alt(CONT_EOMI_LIST, end_anchor=True)

# --------- 조사(문장 미완 신호로 많이 사용) ----------
PARTICLE_END_LIST = [
    # 격조사
    "은","는","이","가","을","를","의",
    # 부사격/방향/처소
    "에","에서","에게","에게서","한테","한테서","께","께서",
    "으로","로","으로서","로서","으로써","로써","으로부터","로부터","에서부터",
    # 접속/공동
    "와","과","랑","하고","며","이랑","하고서","하고는",
    # 보조사
    "도","만","밖에","뿐","마저","조차","이라도","라도","이나","나","이나마","조차도","마저도",
    "까지","부터","부터는","부터도",
    "마다","마다는","마디로?","씩","겸","듯이","대로","만큼","만치","처럼","같이",
    "따라","따라서","따라서는","조로?","치고","치고는","치곤","치곤는",
    # 호격/기타
    "아","야",   # (호격조사) 주의: 구어 종결 '야'와 충돌 가능 → SBD에서 별도 처리 권장
    # 구어/채팅 흔적
    "임","임다","함","중","중임","중이다","중이야",
]

PARTICLE_END_RE = _compile_alt(PARTICLE_END_LIST, end_anchor=True)

# --------- 보너스: 끝말부호/심볼 스트립(매칭 전) ----------
TRAIL_PUNCT_SYM_RE = re.compile(r"[\p{P}\p{S}\s]+$")  # 문장 끝의 구두점/기호/공백 제거

def strip_trailing_punct(s: str) -> str:
    """문장 끝의 문장부호/기호/공백 제거 후 반환"""
    return TRAIL_PUNCT_SYM_RE.sub("", s or "")
